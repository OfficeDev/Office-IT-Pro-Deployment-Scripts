<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Providers</name>
  </assembly>
  <members>
    <member name="T:System.Web.Providers.DefaultMembershipProvider">
      <summary> EntityFramework based MembershipProvider implementation </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.DefaultMembershipProvider" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.ApplicationName">
      <summary> Name of the application </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary> Change the password for the user </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary> Change the password question and answer </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.Create(Microsoft.AspNet.Identity.IUserSecret)">
      <summary> Create a login </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary> Create a user </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.Delete(System.String)">
      <summary> Delete a user's login </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary> Delete a user </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.EnablePasswordReset">
      <summary> Allows resetting of user passwords </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.EnablePasswordRetrieval">
      <summary> Allows retrieval of passwords </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.Find(System.String)">
      <summary> Return the login info for the given userName, null if not found </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary> Finds users that match an email </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary> Find users that match a name </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary> Get all users </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.GetNumberOfUsersOnline">
      <summary> Returns the number of users that are currently online </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.GetPassword(System.String,System.String)">
      <summary> Returns the password, throws if EnablePasswordRetrival is false </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary> Gets a user, and updates the online status of the user </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary> Gets a user, and updates the online status of the user </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.GetUserNameByEmail(System.String)">
      <summary> Gets a user by email </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary> Initializes the provider from configuration </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.MaxInvalidPasswordAttempts">
      <summary> Max number of failed password attempts before lockout </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary> Number of non alphanumeric characters required for passwords </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.MinRequiredPasswordLength">
      <summary> Minimum password length </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.PasswordAttemptWindow">
      <summary> Minutes where invalid password attempts are kept </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.PasswordFormat">
      <summary> Determines how the password is stored in the database (hashed/encrypted/clear) </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.PasswordStrengthRegularExpression">
      <summary> Regular expression used to validate the password strength </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.RequiresQuestionAndAnswer">
      <summary> Controls whether a password question and answer is required </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultMembershipProvider.RequiresUniqueEmail">
      <summary> If set, prevents users from having the same email </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.ResetPassword(System.String,System.String)">
      <summary> Resets a users password </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.UnlockUser(System.String)">
      <summary> Unlocks a user account </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.UpdateSecret(System.String,System.String)">
      <summary> Update the secret for userName </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary> Update a user </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.Validate(System.String,System.String)">
      <summary> Returns true if the secret is correct for userName </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultMembershipProvider.ValidateUser(System.String,System.String)">
      <summary> Validates a user and password </summary>
    </member>
    <member name="T:System.Web.Providers.DefaultProfileProvider">
      <summary> ProfileProvider implemented using EntityFramework </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.DefaultProfileProvider" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.DefaultProfileProvider.ApplicationName">
      <summary> Application names </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary> Deletes inactive profiles </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.DeleteProfiles(System.String[])">
      <summary> Deletes the specified profiles </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)">
      <summary> Deletes the profiles specified </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary> Returns inactive profiles that match </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)">
      <summary> Finds profiles that match the usernameToMatch </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary> Returns a page of inactive profiles </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)">
      <summary> Returns a page of inactive profiles </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
      <summary> Returns the number of inactive profiles </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary> Reads a profile </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary> Initializes the provider from configuration </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary> Saves a profile </summary>
    </member>
    <member name="T:System.Web.Providers.DefaultRoleProvider">
      <summary> Role provider implemented using EntityFramework </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.DefaultRoleProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.AddUsersToRoles(System.String[],System.String[])">
      <summary> Adds all of the usernames to all of the roleNames </summary>
    </member>
    <member name="P:System.Web.Providers.DefaultRoleProvider.ApplicationName">
      <summary> Application name </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.CreateRole(System.String)">
      <summary> Creates a role </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.DeleteRole(System.String,System.Boolean)">
      <summary> Deletes a role </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.FindUsersInRole(System.String,System.String)">
      <summary> Finds users in a role </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.GetAllRoles">
      <summary> Returns all roles </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.GetRolesForUser(System.String)">
      <summary> Gets the roles for a user </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.GetUsersInRole(System.String)">
      <summary> Gets all the users in a given role </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary> Initialize the provider from configuration </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.IsUserInRole(System.String,System.String)">
      <summary> Checks if a user is in a role </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary> Removes usernames from rolenames </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultRoleProvider.RoleExists(System.String)">
      <summary> Checks if a role exists </summary>
    </member>
    <member name="T:System.Web.Providers.DefaultSessionStateProvider">
      <summary> SessionStateProvider implemented using EntityFramework </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.DefaultSessionStateProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.CreateNewStoreData(System.Web.HttpContext,System.Int32)">
      <summary> Creates a new SessionStateStoreData </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)">
      <summary> Creates an uninitialized session item </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.Dispose">
      <summary> Dispose the provider </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.EndRequest(System.Web.HttpContext)">
      <summary> Called on end request and registers a task which purges expired sessions </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)">
      <summary> Get a session item </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)">
      <summary> Get a session and lock it </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary> Initializes the provider from configuration </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.InitializeRequest(System.Web.HttpContext)">
      <summary> Initialize request hook </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)">
      <summary> Release a locked session item </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)">
      <summary> Remove a session item </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.ResetItemTimeout(System.Web.HttpContext,System.String)">
      <summary> Refresh a session item's timeout </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)">
      <summary> Store a session item and release the lock </summary>
    </member>
    <member name="M:System.Web.Providers.DefaultSessionStateProvider.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)">
      <summary> Set an expire callback for the item, currently always returns false </summary>
    </member>
    <member name="T:System.Web.Providers.Entities.Application"></member>
    <member name="M:System.Web.Providers.Entities.Application.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.Entities.Application" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.Entities.Application.ApplicationId"></member>
    <member name="P:System.Web.Providers.Entities.Application.ApplicationName"></member>
    <member name="P:System.Web.Providers.Entities.Application.Description"></member>
    <member name="P:System.Web.Providers.Entities.Application.Memberships"></member>
    <member name="P:System.Web.Providers.Entities.Application.Roles"></member>
    <member name="P:System.Web.Providers.Entities.Application.Users"></member>
    <member name="T:System.Web.Providers.Entities.MembershipEntity"></member>
    <member name="M:System.Web.Providers.Entities.MembershipEntity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.Entities.MembershipEntity" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.Application"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.ApplicationId"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.Comment"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.CreateDate"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.Email"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.FailedPasswordAnswerAttemptCount"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.FailedPasswordAnswerAttemptWindowsStart"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.FailedPasswordAttemptCount"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.FailedPasswordAttemptWindowStart"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.IsApproved"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.IsLockedOut"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.LastLockoutDate"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.LastLoginDate"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.LastPasswordChangedDate"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.Microsoft#AspNet#Identity#IUserSecret#UserName"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.Password"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.PasswordAnswer"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.PasswordFormat"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.PasswordQuestion"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.PasswordSalt"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.Secret"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.User"></member>
    <member name="P:System.Web.Providers.Entities.MembershipEntity.UserId"></member>
    <member name="T:System.Web.Providers.Entities.ProfileEntity"></member>
    <member name="M:System.Web.Providers.Entities.ProfileEntity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.Entities.ProfileEntity" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.Entities.ProfileEntity.LastUpdatedDate"></member>
    <member name="P:System.Web.Providers.Entities.ProfileEntity.PropertyNames"></member>
    <member name="P:System.Web.Providers.Entities.ProfileEntity.PropertyValueBinary"></member>
    <member name="P:System.Web.Providers.Entities.ProfileEntity.PropertyValueStrings"></member>
    <member name="P:System.Web.Providers.Entities.ProfileEntity.User"></member>
    <member name="P:System.Web.Providers.Entities.ProfileEntity.UserId"></member>
    <member name="T:System.Web.Providers.Entities.RoleEntity"></member>
    <member name="M:System.Web.Providers.Entities.RoleEntity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.Entities.RoleEntity" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.Entities.RoleEntity.Application"></member>
    <member name="P:System.Web.Providers.Entities.RoleEntity.ApplicationId"></member>
    <member name="P:System.Web.Providers.Entities.RoleEntity.Description"></member>
    <member name="P:System.Web.Providers.Entities.RoleEntity.RoleId"></member>
    <member name="P:System.Web.Providers.Entities.RoleEntity.RoleName"></member>
    <member name="P:System.Web.Providers.Entities.RoleEntity.UsersInRoles"></member>
    <member name="T:System.Web.Providers.Entities.Session"></member>
    <member name="M:System.Web.Providers.Entities.Session.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.Entities.Session" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.Entities.Session.Created"></member>
    <member name="P:System.Web.Providers.Entities.Session.Expires"></member>
    <member name="P:System.Web.Providers.Entities.Session.Flags"></member>
    <member name="P:System.Web.Providers.Entities.Session.LockCookie"></member>
    <member name="P:System.Web.Providers.Entities.Session.LockDate"></member>
    <member name="P:System.Web.Providers.Entities.Session.Locked"></member>
    <member name="P:System.Web.Providers.Entities.Session.SessionId"></member>
    <member name="P:System.Web.Providers.Entities.Session.SessionItem"></member>
    <member name="P:System.Web.Providers.Entities.Session.Timeout"></member>
    <member name="T:System.Web.Providers.Entities.User"></member>
    <member name="M:System.Web.Providers.Entities.User.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.Entities.User" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.Entities.User.Application"></member>
    <member name="P:System.Web.Providers.Entities.User.ApplicationId"></member>
    <member name="P:System.Web.Providers.Entities.User.IsAnonymous"></member>
    <member name="P:System.Web.Providers.Entities.User.LastActivityDate"></member>
    <member name="P:System.Web.Providers.Entities.User.Membership"></member>
    <member name="P:System.Web.Providers.Entities.User.Profile"></member>
    <member name="P:System.Web.Providers.Entities.User.UserId"></member>
    <member name="P:System.Web.Providers.Entities.User.UserName"></member>
    <member name="P:System.Web.Providers.Entities.User.UsersInRoles"></member>
    <member name="T:System.Web.Providers.Entities.UsersInRole"></member>
    <member name="M:System.Web.Providers.Entities.UsersInRole.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Providers.Entities.UsersInRole" /> class.</summary>
    </member>
    <member name="P:System.Web.Providers.Entities.UsersInRole.Role"></member>
    <member name="P:System.Web.Providers.Entities.UsersInRole.RoleId"></member>
    <member name="P:System.Web.Providers.Entities.UsersInRole.User"></member>
    <member name="P:System.Web.Providers.Entities.UsersInRole.UserId"></member>
  </members>
</doc>