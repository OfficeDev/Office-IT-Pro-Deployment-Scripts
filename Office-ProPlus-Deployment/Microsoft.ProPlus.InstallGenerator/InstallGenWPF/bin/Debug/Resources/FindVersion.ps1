[CmdletBinding()]Param([Parameter()][string] $machineToRun)Function Run-Remote{Param([Parameter()][string] $machineToRun)    Process{    try{    if ($PSScriptRoot) {   $scriptPath = $PSScriptRoot } else {   $scriptPath = split-path -parent $MyInvocation.MyCommand.Definition }        $textToWrite = Invoke-Command -ComputerName $machineToRun -ScriptBlock ${function:Get-OfficeVersion}    }    catch    {    Write-Host $_.Exception.Message           throw;    }    $filename = $machineToRun+"PowershellAttemptVersion.txt"    $textToWrite | Out-File $env:temp\$filename    Stop-Process -Id $PID    }    }    Function Get-OfficeVersion(){    $path16 = 'HKLM:\SOFTWARE\Microsoft\Office\ClickToRun\Configuration'    $path162 = 'HKLM:\SOFTWARE\Microsoft\Office\16.0\ClickToRun\Configuration'    $path15 = 'HKLM:\SOFTWARE\Microsoft\Office\15.0\ClickToRun\Configuration'    $VersionToReport    if(Test-Path $path16){        $VersionToReport = (Get-ItemProperty $path16 -Name VersionToReport -ErrorAction SilentlyContinue).VersionToReport        $VersionToReport+= '\'        $VersionToReport += (Get-ItemProperty $path16 -Name CDNBaseURL -ErrorAction SilentlyContinue).CDNBaseURL    }    elseif(Test-Path $path162){        $VersionToReport = (Get-ItemProperty $path162 -Name VersionToReport -ErrorAction SilentlyContinue).VersionToReport        $VersionToReport+= '\'        $VersionToReport += (Get-ItemProperty $path162 -Name CDNBaseURL -ErrorAction SilentlyContinue).CDNBaseURL    }    elseif(Test-Path $path15){        $VersionToReport = (Get-ItemProperty $path15 -Name VersionToReport -ErrorAction SilentlyContinue).VersionToReport        $VersionToReport+= '\'        $VersionToReport += (Get-ItemProperty $path15 -Name CDNBaseURL -ErrorAction SilentlyContinue).CDNBaseURL    }    return $VersionToReport    }    Run-Remote -machineToRun $machineToRun